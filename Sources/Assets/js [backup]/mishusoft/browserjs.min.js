class BrowserJS {
    constructor(e) {
        this.BrowserName = "Unknown", this.BrowserNameFull = "Unknown", this.BrowserVersion = "Unknown", this.BrowserVersionFull = "Unknown", this.BrowserArchitecture = "Unknown", this.BrowserStatus = "Unknown", this.BrowserAppName = "Unknown", this.BrowserAppCodeName = "Unknown", this.BrowserAppVersion = "Unknown", this.BrowserBuildID = "Unknown", this.BrowserDoNotTrack = "Unknown", this.BrowserCookieEnabled = "Unknown", this.BrowserLanguage = "Unknown", this.BrowserLanguageAll = "Unknown", this.BrowserEngine = "Unknown", this.BrowserEngineVersion = "Unknown", this.BrowserVendor = "Unknown", this.DeviceHardwareConcurrency = "Unknown", this.DeviceMemory = "Unknown", this.PlatformName = "Unknown", this.PlatformArchitecture = "Unknown", this.PlatformWindowManager = "Unknown", this.DeviceName = "Unknown", this.DeviceType = "Unknown", this.UserAgent = "Unknown", this.DeviceScreenHeight = window.screen.height, this.DeviceScreenWidth = window.screen.width, this.DeviceScreenColorDepth = window.screen.colorDepth, this.DeviceScreenPixelDepth = window.screen.pixelDepth, this.WindowLocationHref = window.location.href, this.WindowLocationProtocol = window.location.protocol, this.WindowLocationHostname = window.location.hostname, this.WindowLocationPathname = window.location.pathname, e !== window.navigator ? (console.error("Error: Invalid navigator.."), window.stop()) : (this.browserStatus(e), this.retrieveBrowserInfo(e), this.analyze(e.userAgent))
    }

    analyze(e) {
        let i = "";
        return -1 !== e.indexOf("win") || -1 !== e.indexOf("Win") || -1 !== e.indexOf("WIN") ? (this.PlatformName = "Windows", this.PlatformWindowManager = "Windows", this.DeviceName = "Windows Desktop", this.DeviceType = "Desktop", -1 !== e.indexOf("win16") || -1 !== e.indexOf("Win16") || -1 !== e.indexOf("WIN16") ? this.PlatformName = "Windows 3.11" : -1 !== e.indexOf("win95") || -1 !== e.indexOf("Win95") || -1 !== e.indexOf("WIN95") ? this.PlatformName = "Windows 95" : -1 !== e.indexOf("win95") || -1 !== e.indexOf("Win95") || -1 !== e.indexOf("WIN95") || -1 !== e.indexOf("windows 95") || -1 !== e.indexOf("Windows 95") || -1 !== e.indexOf("WINDOWS 95") || -1 !== e.indexOf("windows95") || -1 !== e.indexOf("Windows95") || -1 !== e.indexOf("WINDOWS95") ? this.PlatformName = "Windows 95" : -1 !== e.indexOf("win98") || -1 !== e.indexOf("Win98") || -1 !== e.indexOf("WIN98") || -1 !== e.indexOf("windows 98") || -1 !== e.indexOf("Windows 98") || -1 !== e.indexOf("WINDOWS 98") || -1 !== e.indexOf("windows98") || -1 !== e.indexOf("Windows95") || -1 !== e.indexOf("WINDOWS95") ? this.PlatformName = "Windows 98" : -1 !== e.indexOf("winn/t") || -1 !== e.indexOf("Winn/t") || -1 !== e.indexOf("WINN/T") || -1 !== e.indexOf("winnt 4.0") || -1 !== e.indexOf("Winnt 4.0") || -1 !== e.indexOf("WINNT 4.0") || -1 !== e.indexOf("windows98") || -1 !== e.indexOf("Windows95") || -1 !== e.indexOf("WINDOWS95") ? this.PlatformName = "Windows NT" : -1 !== e.indexOf("winnt4.0") || -1 !== e.indexOf("Winnt4.0") || -1 !== e.indexOf("WINNT4.0") || -1 !== e.indexOf("windows nt 4.0") || -1 !== e.indexOf("Windows nt 4.0") || -1 !== e.indexOf("windows NT 4.0") || -1 !== e.indexOf("Windows NT 4.0") || -1 !== e.indexOf("WINDOWS NT 4.0") ? this.PlatformName = "Windows NT 4.0" : -1 !== e.indexOf("windows me") || -1 !== e.indexOf("Windows me") || -1 !== e.indexOf("windows ME") || -1 !== e.indexOf("windows Me") || -1 !== e.indexOf("Windows ME") ? this.PlatformName = "Windows ME" : -1 !== e.indexOf("windows nt 5.0") || -1 !== e.indexOf("Windows nt 5.0") || -1 !== e.indexOf("windows NT 5.0") || -1 !== e.indexOf("windows Nt 5.0") || -1 !== e.indexOf("Windows NT 5.0") ? this.PlatformName = "Windows 2000" : -1 !== e.indexOf("windows xp") || -1 !== e.indexOf("Windows xp") || -1 !== e.indexOf("Windows XP") || -1 !== e.indexOf("windows XP") || -1 !== e.indexOf("windows Xp") || -1 !== e.indexOf("windows nt 5.1") || -1 !== e.indexOf("Windows nt 5.1") || -1 !== e.indexOf("Windows Nt 5.1") || -1 !== e.indexOf("Windows NT 5.1") || -1 !== e.indexOf("windows Nt 5.1") || -1 !== e.indexOf("windows NT 5.1") || -1 !== e.indexOf("WINDOWS NT 5.1") ? this.PlatformName = "Windows XP" : -1 !== e.indexOf("windows nt 5.2") || -1 !== e.indexOf("Windows nt 5.2") || -1 !== e.indexOf("Windows Nt 5.2") || -1 !== e.indexOf("Windows NT 5.2") || -1 !== e.indexOf("windows Nt 5.2") || -1 !== e.indexOf("windows NT 5.2") || -1 !== e.indexOf("WINDOWS NT 5.2") ? this.PlatformName = "Windows 2003" : -1 !== e.indexOf("windows nt 6.0") || -1 !== e.indexOf("Windows nt 6.0") || -1 !== e.indexOf("Windows Nt 6.0") || -1 !== e.indexOf("Windows NT 6.0") || -1 !== e.indexOf("windows Nt 6.0") || -1 !== e.indexOf("windows NT 6.0") || -1 !== e.indexOf("WINDOWS NT 6.0") ? this.PlatformName = "Windows Longhorn" : -1 !== e.indexOf("windows nt 6.1") || -1 !== e.indexOf("Windows nt 6.1") || -1 !== e.indexOf("Windows Nt 6.1") || -1 !== e.indexOf("Windows NT 6.1") || -1 !== e.indexOf("windows Nt 6.1") || -1 !== e.indexOf("windows NT 6.1") || -1 !== e.indexOf("WINDOWS NT 6.1") ? this.PlatformName = "Windows 7" : -1 !== e.indexOf("windows nt 6.2") || -1 !== e.indexOf("Windows nt 6.2") || -1 !== e.indexOf("Windows Nt 6.2") || -1 !== e.indexOf("Windows NT 6.2") || -1 !== e.indexOf("windows Nt 6.2") || -1 !== e.indexOf("windows NT 6.2") || -1 !== e.indexOf("WINDOWS NT 6.2") ? this.PlatformName = "Windows 8" : -1 !== e.indexOf("windows nt 6.3") || -1 !== e.indexOf("Windows nt 6.3") || -1 !== e.indexOf("Windows Nt 6.3") || -1 !== e.indexOf("Windows NT 6.3") || -1 !== e.indexOf("windows Nt 6.3") || -1 !== e.indexOf("windows NT 6.3") || -1 !== e.indexOf("WINDOWS NT 6.3") ? this.PlatformName = "Windows 8.1" : -1 === e.indexOf("windows nt 10.0") && -1 === e.indexOf("Windows nt 10.0") && -1 === e.indexOf("Windows Nt 10.0") && -1 === e.indexOf("Windows NT 10.0") && -1 === e.indexOf("windows Nt 10.0") && -1 === e.indexOf("windows NT 10.0") && -1 === e.indexOf("WINDOWS NT 10.0") || (this.PlatformName = "Windows 10")) : -1 !== e.indexOf("x11") || -1 !== e.indexOf("X11") ? (this.PlatformWindowManager = "X11", this.DeviceName = "Linux Desktop", this.DeviceType = "Desktop", -1 !== e.indexOf("linux") || -1 !== e.indexOf("Linux") || -1 !== e.indexOf("LINUX") ? (this.PlatformName = "Linux", -1 !== (i = e.indexOf("ubuntu")) || -1 !== (i = e.indexOf("Ubuntu")) || -1 !== (i = e.indexOf("UBUNTU")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("mageia")) || -1 !== (i = e.indexOf("Mageia")) || -1 !== (i = e.indexOf("MAGEIA")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("arch")) || -1 !== (i = e.indexOf("Arch")) || -1 !== (i = e.indexOf("ARCH")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("fedora")) || -1 !== (i = e.indexOf("Fedora")) || -1 !== (i = e.indexOf("FEDORA")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("debian")) || -1 !== (i = e.indexOf("Debian")) || -1 !== (i = e.indexOf("DEBIAN")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("red hat")) || -1 !== (i = e.indexOf("Red Hat")) || -1 !== (i = e.indexOf("RED HAT")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("gentoo")) || -1 !== (i = e.indexOf("Gentoo")) || -1 !== (i = e.indexOf("GENTOO")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("centos")) || -1 !== (i = e.indexOf("CentOS")) || -1 !== (i = e.indexOf("CENTOS")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("suse")) || -1 !== (i = e.indexOf("Suse")) || -1 !== (i = e.indexOf("SUSE")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("slackware")) || -1 !== (i = e.indexOf("Slackware")) || -1 !== (i = e.indexOf("SLACKWARE")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("linux mint")) || -1 !== (i = e.indexOf("Linux Mint")) || -1 !== (i = e.indexOf("LINUX MINT")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("gnu/Linux")) || -1 !== e.indexOf("GNU/Linux") || -1 !== e.indexOf("GNU/LINUX") ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 === (i = e.indexOf("mandriva")) && -1 === e.indexOf("Mandriva") && -1 === e.indexOf("MANDRIVA") || (this.PlatformName = this.retrievePlatformNameFull(e, i))) : -1 !== (i = e.indexOf("sunos")) || -1 !== (i = e.indexOf("SunOS")) || -1 !== (i = e.indexOf("SUNOS")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("netbsd")) || -1 !== (i = e.indexOf("NetBSD")) || -1 !== (i = e.indexOf("NETBSD")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 !== (i = e.indexOf("openbsd")) || -1 !== (i = e.indexOf("OpenBSD")) || -1 !== (i = e.indexOf("OPENBSD")) ? this.PlatformName = this.retrievePlatformNameFull(e, i) : -1 === (i = e.indexOf("freebsd")) && -1 === (i = e.indexOf("FreeBSD")) && -1 === (i = e.indexOf("FREEBSD")) || (this.PlatformName = this.retrievePlatformNameFull(e, i))) : -1 !== e.indexOf("macintosh") || -1 !== e.indexOf("Macintosh") ? (this.PlatformName = "Macintosh", this.PlatformWindowManager = "Macintosh", this.DeviceName = "Macintosh Desktop", this.DeviceType = "Desktop", -1 === (i = e.indexOf("intel mac")) && -1 === (i = e.indexOf("Intel Mac")) && -1 === (i = e.indexOf("INTEL MAC")) || (this.PlatformName = this.retrievePlatformNameFull(e, i))) : -1 === e.indexOf("mobile") && -1 === e.indexOf("Mobile") && -1 === e.indexOf("MOBILE") || (this.DeviceType = "Mobile", -1 === e.indexOf("linux") && -1 === e.indexOf("Linux") && -1 === e.indexOf("LINUX") || (this.PlatformWindowManager = "Linux"), -1 === (i = e.indexOf("android")) && -1 === (i = e.indexOf("Android")) && -1 === (i = e.indexOf("ANDROID")) || (this.DeviceName = "Android Mobile", this.PlatformName = this.retrievePlatformNameFull(e, i))), this.retrieveArchitecture(e), this
    }

    retrievePlatformNameFull(e, i) {
        let n = "", r = e.substr(i).toString();
        return -1 !== (n = r.indexOf(";")) ? r = r.toString().substring(0, n) : -1 !== (n = r.indexOf(")")) ? r = r.toString().substring(0, n) : -1 !== (n = r.indexOf(" ")) && (r = r.toString().substring(0, n)), r.replace(/[(\/)]/g, " ")
    }

    retrieveArchitecture(e) {
        -1 !== e.indexOf("x64") || -1 !== e.indexOf("WOW64") || -1 !== e.indexOf("Win64") || -1 !== e.indexOf("amd64") || -1 !== e.indexOf("x86_64") || -1 !== e.indexOf("Win64") || -1 !== e.indexOf("Win64") ? (this.BrowserArchitecture = "64 bit", this.PlatformArchitecture = "64 bit") : -1 === e.indexOf("i586") && -1 === e.indexOf("i686") && -1 === e.indexOf("x86") && -1 === e.indexOf("i386") || (this.BrowserArchitecture = "32 bit", this.PlatformArchitecture = "32 bit")
    }

    retrieveBrowserInfo(e) {
        let i = "", n = e.userAgent;
        return this.UserAgent = e.userAgent ? e.userAgent : "Unavailable", this.BrowserAppName = e.appName ? e.appName : "Unavailable", this.BrowserAppCodeName = e.appCodeName ? e.appCodeName : "Unavailable", this.BrowserAppVersion = e.appVersion ? e.appVersion : "Unavailable", this.BrowserBuildID = e.buildID ? e.buildID : "Unavailable", this.BrowserDoNotTrack = e.doNotTrack ? e.doNotTrack : "Unavailable", this.BrowserCookieEnabled = e.cookieEnabled ? e.cookieEnabled : "Unavailable", this.BrowserLanguage = e.language ? e.language : "Unavailable", this.BrowserLanguageAll = e.languages ? e.languages : "Unavailable", this.BrowserEngine = e.product ? e.product : "Unavailable", this.BrowserEngineVersion = e.productSub ? e.productSub : "Unavailable", this.DeviceHardwareConcurrency = e.hardwareConcurrency ? e.hardwareConcurrency : "Unavailable", this.DeviceMemory = e.DeviceMemory ? e.DeviceMemory : "Unavailable", this.BrowserVendor = e.vendor ? e.vendor : "Firefox" === this.BrowserName ? "Mozilla Foundation" : "Unavailable", -1 !== (i = n.indexOf("firefox")) || -1 !== (i = n.indexOf("Firefox")) || -1 !== (i = n.indexOf("FIREFOX")) ? (this.BrowserName = "Firefox", this.BrowserNameFull = this.retrieveBrowserNameFull(n, i), this.BrowserVersion = this.retrieveBrowserVersion(this.BrowserName, this.BrowserNameFull), this.BrowserVersionFull = this.retrieveBrowserVersionFull(this.BrowserName, this.BrowserNameFull)) : -1 !== (i = n.indexOf("opr")) || -1 !== (i = n.indexOf("Opr")) || -1 !== (i = n.indexOf("OPR")) ? (this.BrowserName = "Opera", this.BrowserNameFull = this.retrieveBrowserNameFull(n, i, " "), this.BrowserVersion = this.retrieveBrowserVersion("OPR", this.BrowserNameFull), this.BrowserVersionFull = this.retrieveBrowserVersionFull("OPR", this.BrowserNameFull)) : -1 !== (i = n.indexOf("opera")) || -1 !== (i = n.indexOf("Opera")) || -1 !== (i = n.indexOf("OPERA")) ? (this.BrowserName = "Opera", this.BrowserNameFull = this.retrieveBrowserNameFull(n, i), this.BrowserVersion = this.retrieveBrowserVersion(this.BrowserName, this.BrowserNameFull), this.BrowserVersionFull = this.retrieveBrowserVersionFull(this.BrowserName, this.BrowserNameFull)) : -1 !== (i = n.indexOf("chromium")) || -1 !== (i = n.indexOf("Chromium")) || -1 !== (i = n.indexOf("CHROMIUM")) ? (this.BrowserName = "Chromium", this.BrowserNameFull = this.retrieveBrowserNameFull(n, i), this.BrowserVersion = this.retrieveBrowserVersion(this.BrowserName, this.BrowserNameFull), this.BrowserVersionFull = this.retrieveBrowserVersionFull(this.BrowserName, this.BrowserNameFull)) : -1 !== (i = n.indexOf("chrome")) || -1 !== (i = n.indexOf("Chrome")) || -1 !== (i = n.indexOf("CHROME")) ? (this.BrowserName = "Chrome", this.BrowserNameFull = this.retrieveBrowserNameFull(n, i), this.BrowserVersion = this.retrieveBrowserVersion(this.BrowserName, this.BrowserNameFull), this.BrowserVersionFull = this.retrieveBrowserVersionFull(this.BrowserName, this.BrowserNameFull)) : -1 !== (i = n.indexOf("edge")) || -1 !== (i = n.indexOf("Edge")) || -1 !== (i = n.indexOf("EDGE")) ? (this.BrowserName = "Edge", this.BrowserNameFull = this.retrieveBrowserNameFull(n, i), this.BrowserVersion = this.retrieveBrowserVersion(this.BrowserName, this.BrowserNameFull), this.BrowserVersionFull = this.retrieveBrowserVersionFull(this.BrowserName, this.BrowserNameFull)) : -1 === (i = n.indexOf("safari")) && -1 === (i = n.indexOf("Safari")) && -1 === (i = n.indexOf("SAFARI")) || (this.BrowserName = "Safari", this.BrowserNameFull = this.retrieveBrowserNameFull(n, i), this.BrowserVersion = this.retrieveBrowserVersion(this.BrowserName, this.BrowserNameFull), this.BrowserVersionFull = this.retrieveBrowserVersionFull(this.BrowserName, this.BrowserNameFull)), this
    }

    browserStatus(e) {
        return this.BrowserStatus = e.onLine ? "online" : "offline"
    }

    retrieveBrowserNameFull(e, i) {
        let n = "", r = e.substr(i).toString();
        return -1 !== (n = r.indexOf(";")) && (r = r.toString().substring(0, n)), -1 !== (n = r.indexOf(")")) && (r = r.toString().substring(0, n)), -1 !== (n = r.indexOf(" ")) && (r = r.toString().substring(0, n)), r.replace(/[(\/)]/g, " ")
    }

    retrieveBrowserVersion(e, i) {
        return i.substr(e.length + 1, i.search("\\.") - (e.length + 1))
    }

    retrieveBrowserVersionFull(e, i) {
        return i.substr(e.length + 1)
    }
}